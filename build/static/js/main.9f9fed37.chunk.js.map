{"version":3,"sources":["services/notes.js","components/Note.jsx","components/Notification.jsx","components/Footer.jsx","App.jsx","index.jsx"],"names":["baseUrl","noteService","getAll","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","create","newObject","post","update","put","Note","note","toggleImportance","label","className","type","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialNotes","notesToShow","filter","map","find","n","changeNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","required","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f9fed37.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(`${baseUrl}`);\r\n\tconst nonExisting = {\r\n\t\tid: 10000,\r\n\t\tcontent: 'This note is not saved to server',\r\n\t\tdate: '2019-05-30T17:30:31.098Z',\r\n\t\timportant: true,\r\n\t};\r\n\treturn request.then((response) => response.data.concat(nonExisting));\r\n};\r\n\r\nconst create = (newObject) => {\r\n\tconst request = axios.post(baseUrl, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst noteService = {\r\n\tgetAll: getAll,\r\n\tcreate: create,\r\n\tupdate: update,\r\n};\r\n\r\nexport default noteService;\r\n","const Note = ({ note, important, toggleImportance }) => {\r\n\tconst label = important ? 'make not important' : 'make important';\r\n\treturn (\r\n\t\t<li className=\"note\">\r\n\t\t\t{note}\r\n\t\t\t<button type=\"button\" onClick={toggleImportance}>\r\n\t\t\t\t{label}\r\n\t\t\t</button>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Note;\r\n","const Notification = ({ message }) => {\r\n\tif (message === null) {\r\n\t\treturn null;\r\n\t}\r\n\treturn <div className=\"error\">{message}</div>;\r\n};\r\n\r\n\r\nexport default Notification;","const Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: 'green',\r\n\t\tfontStyle: 'italic',\r\n\t\tfontSize: 16,\r\n    };\r\n    \r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;\r\n","import { useState, useEffect } from 'react';\r\nimport noteService from './services/notes';\r\nimport Note from './components/Note';\r\nimport Notification from './components/Notification';\r\nimport Footer from './components/Footer';\r\n\r\nconst App = () => {\r\n\tconst [notes, setNotes] = useState([]);\r\n\tconst [newNote, setNewNote] = useState('');\r\n\tconst [showAll, setShowAll] = useState(false);\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tnoteService.getAll().then((initialNotes) => {\r\n\t\t\tsetNotes(initialNotes);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n\tconst addNote = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst noteObject = {\r\n\t\t\tcontent: newNote,\r\n\t\t\tdate: new Date().toISOString(),\r\n\t\t\timportant: Math.random() < 0.5,\r\n\t\t};\r\n\r\n\t\tnoteService.create(noteObject).then((returnedNote) => {\r\n\t\t\tsetNotes(notes.concat(returnedNote));\r\n\t\t\tsetNewNote('');\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleNoteChange = (event) => {\r\n\t\tsetNewNote(event.target.value);\r\n\t};\r\n\r\n\tconst toggleImportanceOf = (id) => {\r\n\t\tconst note = notes.find((n) => n.id === id);\r\n\t\tconst changeNote = { ...note, important: !note.important };\r\n\r\n\t\tnoteService\r\n\t\t\t.update(id, changeNote)\r\n\t\t\t.then((returnedNote) => {\r\n\t\t\t\tsetNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetErrorMessage(\r\n\t\t\t\t\t`The note '${note.content}' was already deleted from server`\r\n\t\t\t\t);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetErrorMessage(null);\r\n\t\t\t\t}, 5000);\r\n\t\t\t\tsetNotes(notes.filter((n) => n.id !== id));\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Notes</h1>\r\n\t\t\t<Notification message={errorMessage} />\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={() => setShowAll(!showAll)} type=\"button\">\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tshow {showAll ? 'important' : 'all'}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<ul>\r\n\t\t\t\t{notesToShow.map(({ id, content, important }) => (\r\n\t\t\t\t\t<Note\r\n\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\tnote={content}\r\n\t\t\t\t\t\timportant={important}\r\n\t\t\t\t\t\ttoggleImportance={() => toggleImportanceOf(id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t\t<form onSubmit={addNote}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={newNote}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tonChange={handleNoteChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<button type=\"submit\">save</button>\r\n\t\t\t</form>\r\n\t\t\t<Footer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App.jsx';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}